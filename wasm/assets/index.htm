<html>

<head>
  <meta charset="utf-8" />
  <script src="wasm_exec.js"></script>
  <script>
    const go = new Go();
    WebAssembly.instantiateStreaming(fetch("primes.wasm"), go.importObject).then((result) => {
      go.run(result.instance);
    });
  </script>
</head>

<body>
  <button onclick="wasmPrimes()">Primes from WASM</button>
  <button onclick="jsPrimes()">Primes from JS</button>

  <input id="noPrimes" type="text" />

  <div>
    <textarea id="txtOut" rows="50" cols="80"></textarea>

  </div>
  <script>
    function isPrime(num) {
      if (num % 2 === 0) {
        return false
      }
      for (var i = 3; i < num; i += 2) {
        if (num % i === 0) {
          return false;
        }
      }
      return true;
    }

    function generatePrimesJS(n) {
      var arr = [2];
      for (var i = 3; i >= 3; i += 2) {
        if (isPrime(i)) {
          arr.push(i);
          if (arr.length === n) {
            return arr
          }
        }
      }
      return arr
    }

    var getPrimes = function (primesfn, name) {
      var t0 = performance.now()
      var noPrimesInt = parseInt(noPrimes.value)
      var primes = primesfn(noPrimesInt)
      console.log(primes)
      var t1 = performance.now()
      var output = "Getting " + noPrimesInt + " primes from " + name + " took " + (t1 - t0) + " milliseconds."
      txtOut.value = output + "\n" + txtOut.value
      console.log(output)
    }

    var wasmPrimes = function () {
      getPrimes(generatePrimes, "WASM")
    }

    var jsPrimes = function () {
      getPrimes(generatePrimesJS, "JS")
    }

  </script>
</body>

</html>